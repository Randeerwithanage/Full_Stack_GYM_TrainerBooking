{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:5200';\n    this.users$ = new Subject();\n  }\n  refreshUsers() {\n    this.httpClient.get(`${this.url}/users`).subscribe(users => {\n      this.users$.next(users);\n    });\n  }\n  getUsers() {\n    this.refreshUsers();\n    return this.users$;\n  }\n  login(user) {\n    return this.httpClient.post(`${this.url}/users/login`, user, {\n      responseType: 'text'\n    });\n  }\n  getUser(user) {\n    return this.httpClient.get(`${this.url}/users/${user.username}`);\n  }\n  createUser(user) {\n    return this.httpClient.post(`${this.url}/users`, user, {\n      responseType: 'text'\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,QAAa,MAAM;;;AAM/C,OAAM,MAAOC,WAAW;EAItBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,QAAG,GAAG,uBAAuB;IAC7B,WAAM,GAAoB,IAAIH,OAAO,EAAE;EAED;EAEtCI,YAAY;IAClB,IAAI,CAACD,UAAU,CAACE,GAAG,CAAS,GAAG,IAAI,CAACC,GAAG,QAAQ,CAAC,CAC7CC,SAAS,CAACC,KAAK,IAAG;MACjB,IAAI,CAACC,MAAM,CAACC,IAAI,CAACF,KAAK,CAAC;IACzB,CAAC,CAAC;EACN;EAEAG,QAAQ;IACN,IAAI,CAACP,YAAY,EAAE;IACnB,OAAO,IAAI,CAACK,MAAM;EACpB;EAEAG,KAAK,CAACC,IAAU;IACd,OAAO,IAAI,CAACV,UAAU,CAACW,IAAI,CAAC,GAAG,IAAI,CAACR,GAAG,cAAc,EAACO,IAAI,EAAC;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EACtF;EAEAC,OAAO,CAACH,IAAU;IAChB,OAAO,IAAI,CAACV,UAAU,CAACE,GAAG,CAAO,GAAG,IAAI,CAACC,GAAG,UAAUO,IAAI,CAACI,QAAQ,EAAE,CAAC;EACxE;EAEAC,UAAU,CAACL,IAAU;IACnB,OAAO,IAAI,CAACV,UAAU,CAACW,IAAI,CAAC,GAAG,IAAI,CAACR,GAAG,QAAQ,EAAEO,IAAI,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAC,CAAC;EACnF;;AA5Bad,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["Subject","UserService","constructor","httpClient","refreshUsers","get","url","subscribe","users","users$","next","getUsers","login","user","post","responseType","getUser","username","createUser","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Aravinthan\\Desktop\\FullStack\\Full_Stack_GYM_TrainerBooking\\FullStack\\mean-stack-example\\client\\src\\app\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, tap } from 'rxjs';\r\nimport { User } from './user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  private url = 'http://localhost:5200';\r\n  private users$: Subject<User[]> = new Subject();\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  private refreshUsers() {\r\n    this.httpClient.get<User[]>(`${this.url}/users`)\r\n      .subscribe(users => {\r\n        this.users$.next(users);\r\n      });\r\n  }\r\n\r\n  getUsers(): Subject<User[]> {\r\n    this.refreshUsers();\r\n    return this.users$;\r\n  }\r\n\r\n  login(user: User): Observable<string> {\r\n    return this.httpClient.post(`${this.url}/users/login`,user,{ responseType: 'text' });\r\n  }\r\n\r\n  getUser(user: User): Observable<User> {\r\n    return this.httpClient.get<User>(`${this.url}/users/${user.username}`);\r\n  }\r\n\r\n  createUser(user: User): Observable<string> {\r\n    return this.httpClient.post(`${this.url}/users`, user, { responseType: 'text'});\r\n}\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}