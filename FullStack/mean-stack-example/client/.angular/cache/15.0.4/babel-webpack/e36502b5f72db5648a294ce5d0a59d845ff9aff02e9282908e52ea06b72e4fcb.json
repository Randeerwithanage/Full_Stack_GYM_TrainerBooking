{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TrainService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:5200';\n    this.Trains$ = new Subject();\n  }\n  refreshTrains() {\n    this.httpClient.get(`${this.url}/trains`).subscribe(Trains => {\n      this.Trains$.next(Trains);\n    });\n  }\n  getTrains() {\n    this.refreshTrains();\n    return this.Trains$;\n  }\n}\nTrainService.ɵfac = function TrainService_Factory(t) {\n  return new (t || TrainService)(i0.ɵɵinject(i1.HttpClient));\n};\nTrainService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TrainService,\n  factory: TrainService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,QAAa,MAAM;;;AAO/C,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,QAAG,GAAG,uBAAuB;IAC7B,YAAO,GAAqB,IAAIH,OAAO,EAAE;EAEH;EAEtCI,aAAa;IACnB,IAAI,CAACD,UAAU,CAACE,GAAG,CAAU,GAAG,IAAI,CAACC,GAAG,SAAS,CAAC,CAC/CC,SAAS,CAACC,MAAM,IAAG;MAClB,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,MAAM,CAAC;IAC3B,CAAC,CAAC;EACN;EAEAG,SAAS;IACP,IAAI,CAACP,aAAa,EAAE;IACpB,OAAO,IAAI,CAACK,OAAO;EACrB;;AAhBWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["Subject","TrainService","constructor","httpClient","refreshTrains","get","url","subscribe","Trains","Trains$","next","getTrains","factory","providedIn"],"sourceRoot":"","sources":["F:\\git desctop\\mean-stack-publish\\mean-stack-example\\client\\src\\app\\train.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, tap } from 'rxjs';\r\nimport { Train } from './train';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TrainService {\r\n  private url = 'http://localhost:5200';\r\n  private Trains$: Subject<Train[]> = new Subject();\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  private refreshTrains() {\r\n    this.httpClient.get<Train[]>(`${this.url}/trains`)\r\n      .subscribe(Trains => {\r\n        this.Trains$.next(Trains);\r\n      });\r\n  }\r\n\r\n  getTrains(): Subject<Train[]> {\r\n    this.refreshTrains();\r\n    return this.Trains$;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}