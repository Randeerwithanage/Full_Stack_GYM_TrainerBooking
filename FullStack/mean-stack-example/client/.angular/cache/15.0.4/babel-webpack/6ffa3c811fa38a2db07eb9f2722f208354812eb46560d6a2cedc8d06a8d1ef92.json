{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"../nav-bar/nav-bar.component\";\nfunction TimeslotComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"click\", function TimeslotComponent_div_12_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const row_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.clickOnSeat(row_r1.number));\n    });\n    i0.ɵɵelement(1, \"br\")(2, \"br\")(3, \"br\")(4, \"br\")(5, \"br\")(6, \"br\");\n    i0.ɵɵelementStart(7, \"h1\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const row_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"id\", row_r1.number);\n    i0.ɵɵadvance(8);\n    i0.ɵɵtextInterpolate(row_r1.slot);\n  }\n}\nexport class TimeslotComponent {\n  constructor() {\n    this.block_A = [{\n      number: 'A_A1',\n      occupied: false,\n      slot: \"6am-8am\"\n    }, {\n      number: 'A_A2',\n      occupied: true,\n      slot: \"8am-12pm\"\n    }, {\n      number: 'A_A3',\n      occupied: false,\n      slot: \"1pm-3pm\"\n    }, {\n      number: 'A_A4',\n      occupied: true,\n      slot: \"3pm-5pm\"\n    }, {\n      number: 'A_A5',\n      occupied: false,\n      slot: \"5pm-6pm\"\n    }, {\n      number: 'A_A6',\n      occupied: true,\n      slot: \"06pm-07pm\"\n    }, {\n      number: 'A_A7',\n      occupied: false,\n      slot: \"07pm-09pm\"\n    }, {\n      number: 'A_A8',\n      occupied: true,\n      slot: \"09pm-10pm\"\n    }];\n    this.clientID = \"\";\n    this.matchID = \"\";\n  }\n}\nTimeslotComponent.ɵfac = function TimeslotComponent_Factory(t) {\n  return new (t || TimeslotComponent)();\n};\nTimeslotComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TimeslotComponent,\n  selectors: [[\"app-timeslot\"]],\n  decls: 13,\n  vars: 1,\n  consts: [[\"id\", \"services\", 1, \"services\"], [1, \"heading\"], [1, \"box-container\"], [\"class\", \"box text-center\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"box\", \"text-center\", 3, \"id\", \"click\"]],\n  template: function TimeslotComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"app-nav-bar\");\n      i0.ɵɵtext(1, \">\\n\");\n      i0.ɵɵelementStart(2, \"section\", 0);\n      i0.ɵɵelement(3, \"br\")(4, \"br\")(5, \"br\")(6, \"br\")(7, \"br\")(8, \"br\");\n      i0.ɵɵelementStart(9, \"h1\", 1);\n      i0.ɵɵtext(10, \"Time Slot\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 2);\n      i0.ɵɵtemplate(12, TimeslotComponent_div_12_Template, 9, 2, \"div\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(12);\n      i0.ɵɵproperty(\"ngForOf\", ctx.block_A);\n    }\n  },\n  dependencies: [i1.NgForOf, i2.NavBarComponent],\n  encapsulation: 2\n});\n{\n  this.wsService.receive().subscribe(message => {\n    if (message.method == \"connect\") {\n      this.clientID = message.clientId;\n      ;\n      console.log(\"connected\");\n      console.log(\"client id\" + this.clientID);\n      this.goToSession();\n    }\n    ;\n    if (message.method == \"join\") {\n      console.log(message);\n      this.clientID = message.clientId;\n      console.log(\"join\");\n    }\n    ;\n    if (message.method == \"update\") {\n      console.log(\"Game state updated\");\n      if (!message.game.state) return;\n      Object.entries(message.game.state).forEach(([key, value]) => {\n        if (key != '') {\n          console.log(\"key\" + key + \"_\" + value);\n          this.changeColor(key, value);\n        }\n      });\n    }\n    ;\n  });\n}\ngoToSession();\n{\n  const payLoad = {\n    method: 'join',\n    clientID: this.clientID,\n    matchID: \"1a\"\n  };\n  this.wsService.send(payLoad);\n  console.log(\"send join request \");\n}\nclickOnSeat(seat, any);\n{\n  this.selectedSeat = seat;\n  console.log(this.selectedSeat);\n  const payLoad = {\n    method: 'click',\n    clientID: this.clientID,\n    matchID: \"1a\",\n    color: \"red\",\n    seatID: seat\n  };\n  this.wsService.send(payLoad);\n  console.log(\"send seat ID\");\n}\nchangeColor(i, any, color, any);\n{\n  const div = document.getElementById(i);\n  this.renderer.setStyle(div, 'background-color', color);\n}","map":{"version":3,"mappings":"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","names":["i0","TimeslotComponent","constructor","number","occupied","slot","selectors","decls","vars","consts","template","wsService","receive","subscribe","message","method","clientID","clientId","console","log","goToSession","game","state","Object","entries","forEach","key","value","changeColor","payLoad","matchID","send","clickOnSeat","seat","any","selectedSeat","color","seatID","i","div","document","getElementById","renderer","setStyle"],"sourceRoot":"","sources":["C:\\Users\\Aravinthan\\Desktop\\FullStack\\Full_Stack_GYM_TrainerBooking\\FullStack\\mean-stack-example\\client\\src\\app\\timeslot\\timeslot.component.html","C:\\Users\\Aravinthan\\Desktop\\FullStack\\Full_Stack_GYM_TrainerBooking\\FullStack\\mean-stack-example\\client\\src\\app\\timeslot\\timeslot.component.ts"],"sourcesContent":["<!-- header -->\r\n<app-nav-bar></app-nav-bar>>\r\n<!-- end -->\r\n<section class=\"services\" id=\"services\">\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <br>\r\n    <h1 class=\"heading\">Time Slot</h1>\r\n\r\n    <div class=\"box-container\">\r\n\r\n        <div class=\"box text-center\"  (click)=\"clickOnSeat(row.number)\"  [id]=\"row.number\" *ngFor=\"let row of block_A\">\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <br>\r\n            <h1>{{row.slot}}</h1>\r\n        </div>\r\n\r\n\r\n    </div>\r\n\r\n</section>","import { Component, Renderer2, ElementRef, AfterViewInit, HostListener,ViewChild  } from '@angular/core';\r\nimport { WebsocketService } from '../websocket.service';\r\nimport { FormControl } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-timeslot',\r\n  templateUrl:'./timeslot.component.html',\r\n  styles: [\r\n  ]\r\n})\r\nexport class TimeslotComponent {\r\n  block_A = [{ number: 'A_A1', occupied: false,slot:\"6am-8am\" }, { number: 'A_A2', occupied: true,slot:\"8am-12pm\" }, { number: 'A_A3', occupied: false,slot:\"1pm-3pm\" }, { number: 'A_A4', occupied: true,slot:\"3pm-5pm\" }\r\n            ,{ number: 'A_A5', occupied: false,slot:\"5pm-6pm\" }, { number: 'A_A6', occupied: true,slot:\"06pm-07pm\" }, { number: 'A_A7', occupied: false,slot:\"07pm-09pm\" }, { number: 'A_A8', occupied: true,slot:\"09pm-10pm\" }\r\n            ];\r\n\r\n  selectedSeat: any;\r\n  private clientID=\"\"\r\n  private matchID=\"\"\r\n\r\n  status :\r\n                      \r\n  constructor(private wsService: WebsocketService,private renderer: Renderer2, private el: ElementRef,private router: Router,\r\n    private route: ActivatedRoute) {\r\n      this.wsService.receive().subscribe(message =>{\r\n        if(message.method==\"connect\"){\r\n  \r\n          this.clientID=message.clientId;;\r\n          console.log(\"connected\")\r\n          console.log(\"client id\"+this.clientID)\r\n          this.goToSession();\r\n        };\r\n  \r\n  \r\n        if(message.method==\"join\"){\r\n          console.log(message)\r\n          this.clientID=message.clientId;\r\n          console.log(\"join\")\r\n  \r\n        };\r\n        if(message.method==\"update\"){\r\n  \r\n          console.log(\"Game state updated\");\r\n          if (!message.game.state) return;\r\n            Object.entries(message.game.state).forEach(([key, value]) => {\r\n  \r\n            if(key!=''){\r\n              console.log(\"key\"+key+\"_\"+value)\r\n               this.changeColor(key,value);\r\n          }\r\n          });\r\n  \r\n  \r\n        };\r\n  \r\n      });\r\n      \r\n    }\r\n  \r\n    goToSession(){\r\n      const payLoad = {\r\n        method: 'join',\r\n        clientID: this.clientID,\r\n        matchID:\"1a\",\r\n      };\r\n      this.wsService.send(payLoad);\r\n      console.log(\"send join request \")\r\n    }\r\n  \r\n    clickOnSeat(seat: any) {\r\n      this.selectedSeat = seat;\r\n      console.log(this.selectedSeat);\r\n      const payLoad = {\r\n        method: 'click',\r\n        clientID: this.clientID,\r\n        matchID:\"1a\",\r\n        color:\"red\",\r\n        seatID:seat\r\n      };\r\n      this.wsService.send(payLoad);\r\n      console.log(\"send seat ID\")\r\n    }\r\n  \r\n    changeColor(i: any,color: any) {\r\n  \r\n      const div = document.getElementById(i);\r\n      this.renderer.setStyle(div, 'background-color', color);\r\n  \r\n }\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}