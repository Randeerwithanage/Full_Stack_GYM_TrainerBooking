{"ast":null,"code":"import { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EmployeeService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'http://localhost:5200';\n    this.employees$ = new Subject();\n  }\n  refreshEmployees() {\n    this.httpClient.get(`${this.url}/employees`).subscribe(employees => {\n      this.employees$.next(employees);\n    });\n  }\n  getEmployees() {\n    this.refreshEmployees();\n    return this.employees$;\n  }\n  getEmployee(id) {\n    return this.httpClient.get(`${this.url}/employees/${id}`);\n  }\n  createEmployee(employee) {\n    return this.httpClient.post(`${this.url}/employees`, employee, {\n      responseType: 'text'\n    });\n  }\n  updateEmployee(id, employee) {\n    return this.httpClient.put(`${this.url}/employees/${id}`, employee, {\n      responseType: 'text'\n    });\n  }\n  deleteEmployee(id) {\n    return this.httpClient.delete(`${this.url}/employees/${id}`, {\n      responseType: 'text'\n    });\n  }\n}\nEmployeeService.ɵfac = function EmployeeService_Factory(t) {\n  return new (t || EmployeeService)(i0.ɵɵinject(i1.HttpClient));\n};\nEmployeeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: EmployeeService,\n  factory: EmployeeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAAqBA,OAAO,QAAa,MAAM;;;AAM9C,OAAM,MAAOC,eAAe;EAI3BC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAHtB,QAAG,GAAG,uBAAuB;IAC7B,eAAU,GAAwB,IAAIH,OAAO,EAAE;EAET;EAEtCI,gBAAgB;IACtB,IAAI,CAACD,UAAU,CAACE,GAAG,CAAa,GAAG,IAAI,CAACC,GAAG,YAAY,CAAC,CACrDC,SAAS,CAACC,SAAS,IAAG;MACrB,IAAI,CAACC,UAAU,CAACC,IAAI,CAACF,SAAS,CAAC;IACjC,CAAC,CAAC;EACN;EAEAG,YAAY;IACV,IAAI,CAACP,gBAAgB,EAAE;IACvB,OAAO,IAAI,CAACK,UAAU;EACxB;EAEAG,WAAW,CAACC,EAAU;IACpB,OAAO,IAAI,CAACV,UAAU,CAACE,GAAG,CAAW,GAAG,IAAI,CAACC,GAAG,cAAcO,EAAE,EAAE,CAAC;EACrE;EAEAC,cAAc,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACZ,UAAU,CAACa,IAAI,CAAC,GAAG,IAAI,CAACV,GAAG,YAAY,EAAES,QAAQ,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAC1F;EAEAC,cAAc,CAACL,EAAU,EAAEE,QAAkB;IAC3C,OAAO,IAAI,CAACZ,UAAU,CAACgB,GAAG,CAAC,GAAG,IAAI,CAACb,GAAG,cAAcO,EAAE,EAAE,EAAEE,QAAQ,EAAE;MAAEE,YAAY,EAAE;IAAM,CAAE,CAAC;EAC/F;EAEAG,cAAc,CAACP,EAAU;IACvB,OAAO,IAAI,CAACV,UAAU,CAACkB,MAAM,CAAC,GAAG,IAAI,CAACf,GAAG,cAAcO,EAAE,EAAE,EAAE;MAAEI,YAAY,EAAE;IAAM,CAAE,CAAC;EACxF;;AAhCYhB,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAqB,SAAfrB,eAAe;EAAAsB,YAFf;AAAM","names":["Subject","EmployeeService","constructor","httpClient","refreshEmployees","get","url","subscribe","employees","employees$","next","getEmployees","getEmployee","id","createEmployee","employee","post","responseType","updateEmployee","put","deleteEmployee","delete","factory","providedIn"],"sourceRoot":"","sources":["F:\\git desctop\\FullStack-1\\mean-stack-example\\client\\src\\app\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, Subject, tap } from 'rxjs';\r\nimport { Employee } from './employee';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n })\r\n export class EmployeeService {\r\n  private url = 'http://localhost:5200';\r\n  private employees$: Subject<Employee[]> = new Subject();\r\n  \r\n  constructor(private httpClient: HttpClient) { }\r\n  \r\n  private refreshEmployees() {\r\n    this.httpClient.get<Employee[]>(`${this.url}/employees`)\r\n      .subscribe(employees => {\r\n        this.employees$.next(employees);\r\n      });\r\n  }\r\n  \r\n  getEmployees(): Subject<Employee[]> {\r\n    this.refreshEmployees();\r\n    return this.employees$;\r\n  }\r\n  \r\n  getEmployee(id: string): Observable<Employee> {\r\n    return this.httpClient.get<Employee>(`${this.url}/employees/${id}`);\r\n  }\r\n  \r\n  createEmployee(employee: Employee): Observable<string> {\r\n    return this.httpClient.post(`${this.url}/employees`, employee, { responseType: 'text' });\r\n  }\r\n  \r\n  updateEmployee(id: string, employee: Employee): Observable<string> {\r\n    return this.httpClient.put(`${this.url}/employees/${id}`, employee, { responseType: 'text' });\r\n  }\r\n  \r\n  deleteEmployee(id: string): Observable<string> {\r\n    return this.httpClient.delete(`${this.url}/employees/${id}`, { responseType: 'text' });\r\n  }\r\n }\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}